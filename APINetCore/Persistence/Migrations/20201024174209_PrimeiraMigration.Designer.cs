// <auto-generated />
using System;
using APINetCore.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace APINetCore.Persistence.Migrations
{
    [DbContext(typeof(APIDbContext))]
    [Migration("20201024174209_PrimeiraMigration")]
    partial class PrimeiraMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("APINetCore.Entidades.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdProfessor")
                        .HasColumnType("int");

                    b.Property<int>("IdUnidade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdProfessor");

                    b.HasIndex("IdUnidade");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("APINetCore.Entidades.Comanda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("dtAbertura")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dtFechamento")
                        .HasColumnType("datetime2");

                    b.Property<int>("statusComanda")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Comandas");
                });

            modelBuilder.Entity("APINetCore.Entidades.ItensComanda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdComanda")
                        .HasColumnType("int");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<int>("quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdComanda");

                    b.ToTable("ComandaItens");
                });

            modelBuilder.Entity("APINetCore.Entidades.NotaFiscal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdComanda")
                        .HasColumnType("int");

                    b.Property<DateTime>("dtEmissao")
                        .HasColumnType("datetime2");

                    b.Property<double>("valorDesconto")
                        .HasColumnType("float");

                    b.Property<double>("valorPago")
                        .HasColumnType("float");

                    b.Property<double>("valorTotal")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("NotasFiscais");
                });

            modelBuilder.Entity("APINetCore.Entidades.NotaFiscalItens", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdNotaFiscal")
                        .HasColumnType("int");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<int?>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<double>("ValorComDesconto")
                        .HasColumnType("float");

                    b.Property<double>("ValorDesconto")
                        .HasColumnType("float");

                    b.Property<double>("ValorTotalItem")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdNotaFiscal");

                    b.HasIndex("ProdutoId");

                    b.ToTable("NotasFiscaisItens");
                });

            modelBuilder.Entity("APINetCore.Entidades.Produtos", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ValorUnitario")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("APINetCore.Entidades.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdUnidade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdUnidade");

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("APINetCore.Entidades.Unidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Unidades");
                });

            modelBuilder.Entity("APINetCore.Entidades.Aluno", b =>
                {
                    b.HasOne("APINetCore.Entidades.Professor", "Professor")
                        .WithMany("Alunos")
                        .HasForeignKey("IdProfessor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("APINetCore.Entidades.Unidade", "Unidade")
                        .WithMany("Alunos")
                        .HasForeignKey("IdUnidade")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("APINetCore.Entidades.ItensComanda", b =>
                {
                    b.HasOne("APINetCore.Entidades.Comanda", "Comanda")
                        .WithMany("ComandaItens")
                        .HasForeignKey("IdComanda")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("APINetCore.Entidades.NotaFiscalItens", b =>
                {
                    b.HasOne("APINetCore.Entidades.NotaFiscal", "NotaFiscal")
                        .WithMany("notaFiscalItens")
                        .HasForeignKey("IdNotaFiscal")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("APINetCore.Entidades.Produtos", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId");
                });

            modelBuilder.Entity("APINetCore.Entidades.Produtos", b =>
                {
                    b.HasOne("APINetCore.Entidades.ItensComanda", null)
                        .WithOne("Produto")
                        .HasForeignKey("APINetCore.Entidades.Produtos", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("APINetCore.Entidades.Professor", b =>
                {
                    b.HasOne("APINetCore.Entidades.Unidade", "Unidade")
                        .WithMany("Professores")
                        .HasForeignKey("IdUnidade")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
